path = '/home/local/USDA-ARS/fosterz/Repositories/Journals/laboratory_journal/nanodrop/2014_06_23_2-2.tsv'
read.csv(path )
read.csv(path, sep='\t')
read.csv(path, sep='\t')[1]
path = c("/home/local/USDA-ARS/fosterz/Repositories/Journals/laboratory_journal/nanodrop/2014_06_23_2-2.tsv", "/home/local/USDA-ARS/fosterz/Repositories/Journals/laboratory_journal/nanodrop/2014_06_27_2-4.tsv")
read.csv(path, sep='\t')[1]
read.csv(path, sep='\t')
read_nanodrop_tsv <- function(path) {
rbind(lapply(path, read.csv, sep='\t'))
}
read_nanodrop_tsv(path)
read_nanodrop_tsv <- function(path) {
do.call(rbind, lapply(path, read.csv, sep='\t'))
}
read_nanodrop_tsv(path)
read_nanodrop_tsv <- function(path) {
data <- do.call(rbind, lapply(path, read.csv, sep='\t'))
aggregate(. ~ Sample.ID, data = data, mean)
}
read_nanodrop_tsv(path)
data <- do.call(rbind, lapply(path, read.csv, sep='\t'))
names(data)
?as.date
?as.Date
?strftime
data <- do.call(rbind, lapply(path, read.csv, sep='\t'))
data$Date.and.Time[1]
as.Date(data$Date.and.Time, "%m/%d/%Y %I:%M:%S %p")
?as.Data
?as.Date
install.packages("lubridate")
mdy_hms(data$Date.and.Time)
library(lubridate)
mdy_hms(data$Date.and.Time)
data$Date.and.Time
names(data)
mean(mdy_hms(data$Date.and.Time))
data[,1]
data[1,]
read_nanodrop_tsv <- function(path) {
if (!require(lubridate)) {
stop("install package lubridate")
}
data_format <- "%m/%d/%Y %I:%M:%S %p"
data <- do.call(rbind, lapply(path, read.csv, sep='\t'))
names(data) <- c("measurment", "sample_id", "user", "time",
"concentration", "unit", "a260", "a280",
"a260_a280", "a260_a230", "type", "factor")
data$time <- mdy_hms(data$Date.and.Time)
aggregate(. ~ Sample.ID, data = data, mean)
}
read_nanodrop_tsv(path)
read_nanodrop_tsv <- function(path) {
if (!require(lubridate)) {
stop("install package lubridate")
}
data_format <- "%m/%d/%Y %I:%M:%S %p"
data <- do.call(rbind, lapply(path, read.csv, sep='\t'))
names(data) <- c("measurment", "sample_id", "user", "time",
"concentration", "unit", "a260", "a280",
"a260_a280", "a260_a230", "type", "factor")
data$time <- mdy_hms(data$time)
aggregate(. ~ Sample.ID, data = data, mean)
}
read_nanodrop_tsv(path)
read_nanodrop_tsv <- function(path) {
if (!require(lubridate)) {
stop("install package lubridate")
}
data_format <- "%m/%d/%Y %I:%M:%S %p"
data <- do.call(rbind, lapply(path, read.csv, sep='\t'))
names(data) <- c("measurment", "sample_id", "user", "time",
"concentration", "unit", "a260", "a280",
"a260_a280", "a260_a230", "type", "factor")
data$time <- mdy_hms(data$time)
aggregate(. ~ sample_id, data = data, mean)
}
read_nanodrop_tsv(path)
read_nanodrop_tsv(path)$time
read_nanodrop_tsv(path)$time[1]
read_nanodrop_tsv <- function(path) {
if (!require(lubridate)) {
stop("install package lubridate")
}
data_format <- "%m/%d/%Y %I:%M:%S %p"
data <- do.call(rbind, lapply(path, read.csv, sep='\t'))
names(data) <- c("measurment", "sample_id", "user", "time",
"concentration", "unit", "a260", "a280",
"a260_a280", "a260_a230", "type", "factor")
data$time <- mdy_hms(data$time)
return(data)
aggregate(. ~ sample_id, data = data, mean)
}
read_nanodrop_tsv(path)
mean(read_nanodrop_tsv(path)$time)
df = read_nanodrop_tsv(path)
library([lyr])
library(plyr)
ddply(df, "sample_id", summarsie, x = mean(x))
ddply(df, "sample_id", summarise, x = mean(x))
read_nanodrop_tsv <- function(path) {
if (!require(lubridate)) {
stop("install package lubridate")
}
data_format <- "%m/%d/%Y %I:%M:%S %p"
data <- do.call(rbind, lapply(path, read.csv, sep='\t'))
names(data) <- c("measurment", "sample_id", "user", "time",
"concentration", "unit", "a260", "a280",
"a260_a280", "a260_a230", "type", "factor")
data$time <- mdy_hms(data$time)
aggregate(. ~ sample_id, data = data, mean)
}
df = read_nanodrop_tsv(path)
as.POSIXct(df$time)
read_nanodrop_tsv <- function(path) {
if (!require(lubridate)) {
stop("install package lubridate")
}
data_format <- "%m/%d/%Y %I:%M:%S %p"
data <- do.call(rbind, lapply(path, read.csv, sep='\t'))
names(data) <- c("measurment", "sample_id", "user", "time",
"concentration", "unit", "a260", "a280",
"a260_a280", "a260_a230", "type", "factor")
data$time <- mdy_hms(data$time)
data <- aggregate(. ~ sample_id, data = data, mean)
class(data$time) = 'POSIXct'
data$time = format(data$time, data_format)
}
read_nanodrop_tsv <- function(path) {
if (!require(lubridate)) {
stop("install package lubridate")
}
data_format <- "%m/%d/%Y %I:%M:%S %p"
data <- do.call(rbind, lapply(path, read.csv, sep='\t'))
names(data) <- c("measurment", "sample_id", "user", "time",
"concentration", "unit", "a260", "a280",
"a260_a280", "a260_a230", "type", "factor")
data$time <- mdy_hms(data$time)
data <- aggregate(. ~ sample_id, data = data, mean)
class(data$time) = 'POSIXct'
data$time = format(data$time, data_format)
return(data)
}
df = read_nanodrop_tsv(path)
df
path = "/home/local/USDA-ARS/fosterz/Repositories/Journals/laboratory_journal/nanodrop/2014_06_23_2-2_spectrum.tsv"
data <- readLines(path)
data readChar(path)
data <-  readChar(path)
data <- readLines(path)
data == ''
data <- split_at(data, data == '')
split_at <- function(x, pos) unname(split(x, cumsum(seq_along(x) %in% pos)))
data <- split_at(data, data == '')
data
split_at <- function(x, pos) unname(split(x, cumsum(seq_along(x) %in% pos)))
data <- readLines(path)
data <- split_at(data, which(data == ''))
data
data <- data[sapply(data, length) > 1]
data
data[-1] <- lapply(data[-1], function(x) x[-1])
data
split_at <- function(x, pos) unname(split(x, cumsum(seq_along(x) %in% pos)))
data <- readLines(path)
data <- split_at(data, which(data == ''))
data <- data[sapply(data, length) > 1]
data[-1] <- lapply(data[-1], function(x) x[-1])
sample_id <- sapply(data, function(x) x[1])
sample_date <- sapply(data, function(x) x[2])
data <- lapply(data, function(x) x[-1:3])
split_at <- function(x, pos) unname(split(x, cumsum(seq_along(x) %in% pos)))
data <- readLines(path)
data <- split_at(data, which(data == ''))
data <- data[sapply(data, length) > 1]
data[-1] <- lapply(data[-1], function(x) x[-1])
sample_id <- sapply(data, function(x) x[1])
sample_date <- sapply(data, function(x) x[2])
data <- lapply(data, function(x) x[-(1:3)])
data
sample_date
sample_id
strsplit(data, split='\t', fixed=TRUE)
wavelength <- lapply(data, function(x) strsplit(x, split='\t', fixed=TRUE))
wavelength[1]
?grep
wavelength <- lapply(data, function(x) gsub("^.*\t", ''))
wavelength <- lapply(data, function(x) gsub("^.*\t", '', x))
wavelength
wavelength <- as.numeric(lapply(data, function(x) gsub("^.*\t", '', x)))
wavelength <- lapply(data, function(x) as.numeric(gsub("^.*\t", '', x)))
wavelength
wavelength <- lapply(data, function(x) as.numeric(gsub("\t.*$", '', x)))
wavelength
wavelength[1] == wavelength[2]
wavelength[[1]] == wavelength[[2]]
wavelength[[1]] %==% wavelength[[2]]
wavelength[[1]] %=% wavelength[[2]]
wavelength[[1]] is wavelength[[2]]
identical(wavelength)
?==
?'=='
as.matrix(wavelength)
ldply(wavelength)
sapply(ldply(wavelength), function(x) length(unique(x)) == 1)
all(sapply(ldply(wavelength), function(x) length(unique(x)) == 1))
?identical
unique(wavelength)
x = list(1:10, 1:10, 1:11)
x
unique(x)
ldply(absorbance)
absorbance <- lapply(data, function(x) as.numeric(gsub("^.*\t", '', x)))
ldply(absorbance)
t(ldply(absorbance))
read_nanodrop_spectrum_tsv <- function(path) {
if (!require(lubridate)) {
stop("install package lubridate")
}
split_at <- function(x, pos) unname(split(x, cumsum(seq_along(x) %in% pos)))
data <- readLines(path)
data <- split_at(data, which(data == ''))
data <- data[sapply(data, length) > 1]
data[-1] <- lapply(data[-1], function(x) x[-1])
sample_id <- sapply(data, function(x) x[1])
sample_date <- sapply(data, function(x) x[2])
sample_date <- mdy_hms(sample_date)
data <- lapply(data, function(x) x[-(1:3)])
wavelength <- lapply(data, function(x) as.numeric(gsub("\t.*$", '', x)))
absorbance <- lapply(data, function(x) as.numeric(gsub("^.*\t", '', x)))
if (length(unque(wavelength)) != 1) {
stop("wavelengths are not the same between samples")
}
data <- t(ldply(absorbance))
rownames(data) <- wavelength[[1]]
colnames(data) <- sample_id
return(data)
}
read_nanodrop_spectrum_tsv(path)
read_nanodrop_spectrum_tsv <- function(path) {
if (!require(lubridate)) {
stop("install package lubridate")
}
split_at <- function(x, pos) unname(split(x, cumsum(seq_along(x) %in% pos)))
data <- readLines(path)
data <- split_at(data, which(data == ''))
data <- data[sapply(data, length) > 1]
data[-1] <- lapply(data[-1], function(x) x[-1])
sample_id <- sapply(data, function(x) x[1])
sample_date <- sapply(data, function(x) x[2])
sample_date <- mdy_hms(sample_date)
data <- lapply(data, function(x) x[-(1:3)])
wavelength <- lapply(data, function(x) as.numeric(gsub("\t.*$", '', x)))
absorbance <- lapply(data, function(x) as.numeric(gsub("^.*\t", '', x)))
if (length(unique(wavelength)) != 1) {
stop("wavelengths are not the same between samples")
}
data <- t(ldply(absorbance))
rownames(data) <- wavelength[[1]]
colnames(data) <- sample_id
return(data)
}
read_nanodrop_spectrum_tsv(path)
?append
path = c("/home/local/USDA-ARS/fosterz/Repositories/Journals/laboratory_journal/nanodrop/2014_06_23_2-2_spectrum.tsv", "/home/local/USDA-ARS/fosterz/Repositories/Journals/laboratory_journal/nanodrop/2014_06_27_2-4_spectrum.tsv")
data <- sapply(path, function(x) c(readLines(x), '', ''))
data
read_nanodrop_spectrum_tsv <- function(path) {
if (!require(lubridate)) {
stop("install package lubridate")
}
split_at <- function(x, pos) unname(split(x, cumsum(seq_along(x) %in% pos)))
data <- sapply(path, function(x) c(readLines(x), '', ''))
data <- split_at(data, which(data == ''))
data <- data[sapply(data, length) > 1]
data[-1] <- lapply(data[-1], function(x) x[-1])
sample_id <- sapply(data, function(x) x[1])
sample_date <- sapply(data, function(x) x[2])
sample_date <- mdy_hms(sample_date)
data <- lapply(data, function(x) x[-(1:3)])
wavelength <- lapply(data, function(x) as.numeric(gsub("\t.*$", '', x)))
absorbance <- lapply(data, function(x) as.numeric(gsub("^.*\t", '', x)))
if (length(unique(wavelength)) != 1) {
stop("wavelengths are not the same between samples")
}
data <- t(ldply(absorbance))
rownames(data) <- wavelength[[1]]
colnames(data) <- sample_id
return(data)
}
read_nanodrop_spectrum_tsv(path)
if (!require(lubridate)) {
stop("install package lubridate")
}
split_at <- function(x, pos) unname(split(x, cumsum(seq_along(x) %in% pos)))
data <- sapply(path, function(x) c(readLines(x), '', ''))
data <- split_at(data, which(data == ''))
data <- data[sapply(data, length) > 1]
data[-1] <- lapply(data[-1], function(x) x[-1])
sample_id <- sapply(data, function(x) x[1])
sample_date <- sapply(data, function(x) x[2])
sample_date <- mdy_hms(sample_date)
data <- lapply(data, function(x) x[-(1:3)])
wavelength <- lapply(data, function(x) as.numeric(gsub("\t.*$", '', x)))
absorbance <- lapply(data, function(x) as.numeric(gsub("^.*\t", '', x)))
if (length(unique(wavelength)) != 1) {
stop("wavelengths are not the same between samples")
}
data
data <- ldply(absorbance)
data
data$sample_id <- sample_id
data <- aggregate(. ~ sample_id, data = data, mean)
data
data <- ldply(absorbance)
data$sample_id <- sample_id
data
aggregate(. ~ sample_id, data = data, mean)
read_nanodrop_spectrum_tsv <- function(path, average=TRUE) {
if (!require(lubridate)) {
stop("install package lubridate")
}
split_at <- function(x, pos) unname(split(x, cumsum(seq_along(x) %in% pos)))
data <- sapply(path, function(x) c(readLines(x), '', ''))
data <- split_at(data, which(data == ''))
data <- data[sapply(data, length) > 1]
data[-1] <- lapply(data[-1], function(x) x[-1])
sample_id <- sapply(data, function(x) x[1])
sample_date <- sapply(data, function(x) x[2])
sample_date <- mdy_hms(sample_date)
data <- lapply(data, function(x) x[-(1:3)])
wavelength <- lapply(data, function(x) as.numeric(gsub("\t.*$", '', x)))
absorbance <- lapply(data, function(x) as.numeric(gsub("^.*\t", '', x)))
if (length(unique(wavelength)) != 1) {
stop("wavelengths are not the same between samples")
}
data <- ldply(absorbance)
if (average) {
data$sample_id <- sample_id
data <- aggregate(. ~ sample_id, data = data, mean)
data <- t(data[,-1])
}
rownames(data) <- wavelength[[1]]
colnames(data) <- sample_id
return(data)
}
read_nanodrop_spectrum_tsv(path)
read_nanodrop_spectrum_tsv <- function(path, average=TRUE) {
if (!require(lubridate)) {
stop("install package lubridate")
}
split_at <- function(x, pos) unname(split(x, cumsum(seq_along(x) %in% pos)))
data <- sapply(path, function(x) c(readLines(x), '', ''))
data <- split_at(data, which(data == ''))
data <- data[sapply(data, length) > 1]
data[-1] <- lapply(data[-1], function(x) x[-1])
sample_id <- sapply(data, function(x) x[1])
sample_date <- sapply(data, function(x) x[2])
sample_date <- mdy_hms(sample_date)
data <- lapply(data, function(x) x[-(1:3)])
wavelength <- lapply(data, function(x) as.numeric(gsub("\t.*$", '', x)))
absorbance <- lapply(data, function(x) as.numeric(gsub("^.*\t", '', x)))
if (length(unique(wavelength)) != 1) {
stop("wavelengths are not the same between samples")
}
data <- ldply(absorbance)
if (average) {
data$sample_id <- sample_id
data <- aggregate(. ~ sample_id, data = data, mean)
data <- t(data[,-1])
}
rownames(data) <- wavelength[[1]]
colnames(data) <- unique(sample_id)
return(data)
}
read_nanodrop_spectrum_tsv(path)
