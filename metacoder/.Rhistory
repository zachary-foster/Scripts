fapply(1:10, list("mean", "sd", "median"), preprocessor=rnorm)
source("functions.R")
fapply(1:10, list("mean", "sd", "median"), preprocessor=rnorm)
source("functions.R")
fapply(1:10, list("mean", "sd", "median"), preprocessor=rnorm)
source("functions.R")
fapply(1:10, list("mean", "sd", "median"), preprocessor=rnorm)
source("functions.R")
fapply(1:10, list("mean", "sd", "median"), preprocessor=rnorm)
source("functions.R")
fapply(1:10, list("mean", "sd", "median"), preprocessor=rnorm)
source("functions.R")
fapply(1:10, list("mean", "sd", "median"), preprocessor=rnorm)
fapply(1:10, c("mean", "sd", "median"), preprocessor=rnorm)
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=TRUE,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
View(taxon_statistics)
list(1:10)
as.list(1:10)
fapply(as.list(1:10), c("mean", "sd", "median"), preprocessor=rnorm)
source("functions.R")
fapply(as.list(1:10), c("mean", "sd", "median"), preprocessor=rnorm)
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=TRUE,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
source("functions.R")
fapply(as.list(1:10), c("mean", "sd", "median"), preprocessor=rnorm)
fapply(1:10, c("mean", "sd", "median"), preprocessor=rnorm)
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=TRUE,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
View(taxon_statistics)
fapply(1:10, c("mean", "sd", "median", "lm"), preprocessor=rnorm)
?lm
fapply(1:10, c("mean", "sd", "median", "range"), preprocessor=rnorm)
fapply(1:10, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x <- fapply(1:10, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
melt(x)
melt(x, id=0)
melt(x, id=1)
as.list(1:10)
as.vector(as.list(1:10))
str(x)
source("functions.R")
x <- fapply(1:10, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
str(x)
x <- fapply(1:100, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
str(x)
str(taxon_statistics)
str(taxon_statistics$optimal_threshold)
str(taxon_statistics$optimal_threshold[1])
unlist(taxon_statistics$optimal_threshold[1])
unlist(taxon_statistics$optimal_threshold)
source("functions.R")
x <- fapply(1:100, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
str(x)
source("functions.R")
x <- fapply(1:100, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=TRUE,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
str(taxon_statistics)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
str(taxon_statistics)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
str(taxon_statistics)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
str(taxon_statistics)
taxon_statistics\
taxon_statistics
View(taxonomy_data)
View(taxon_statistics)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
str(taxon_statistics)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
source("functions.R")
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:20,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
View(taxon_statistics)
taxon_statistics <- fapply(taxonomy_data[10:12,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:12,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
taxon_statistics
ldply(taxon_statistics, data.frame)
ldply(taxon_statistics, as.data.frame)
taxon_statistics
lapply(taxon_statistics, unlist, recursive=F)
as.data.frame(do.call(cbind, lapply(taxon_statistics, unlist, recursive=F)), stringsAsFactors=FALSE)
x <- as.data.frame(do.call(cbind, lapply(taxon_statistics, unlist, recursive=F)), stringsAsFactors=FALSE)
str(x)
lapply(taxon_statistics, unlist, recursive=F)
ldply(lapply(taxon_statistics, unlist, recursive=F), data.frame)
do.call(data.frame, lapply(taxon_statistics, unlist, recursive=F))
lapply(taxon_statistics, unlist, recursive=F)
x <- fapply(1:100, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
x
taxon_statistics
x
taxon_statistics
x
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
x <- fapply(as.list(1:5), c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
taxon_statistics
x
taxon_statistics
x
source("functions.R")
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
source("functions.R")
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
taxon_statistics
x
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
source("functions.R")
x
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
source("functions.R")
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
source("functions.R")
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
source("functions.R")
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
source("functions.R")
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
source("functions.R")
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
str(x)
taxon_statistics <- fapply(taxonomy_data[10:12,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:12,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
taxon_statistics <- fapply(taxonomy_data[10:12,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
taxon_statistics <- fapply(taxonomy_data[10:12,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
source("functions.R")
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
taxon_statistics <- fapply(taxonomy_data[10:12,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
1:0
seq(1, 0)
source("functions.R")
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
taxon_statistics <- fapply(taxonomy_data[10:12,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
View(taxon_statistics)
str(taxon_statistics)
taxon_statistics <- fapply(taxonomy_data[10:12,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
taxon_statistics
x <- fapply(1:5, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
x
taxon_statistics
x
x <- fapply(1:2, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
taxon_statistics
x
taxon_statistics
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = .1,
threshold_resolution = .1)
taxon_statistics
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = .1,
threshold_resolution = .1)
taxon_statistics
lapply(taxon_statistics, function(x) unlist(x, recursive=FALSE))
taxon_statistics
str(taxon_statistics)
taxon_statistics
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = .1,
threshold_resolution = .1)
taxon_statistics
lapply(taxon_statistics, function(x) unlist(x, recursive=FALSE))
taxon_statistics[[1]]
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = .1,
threshold_resolution = .1)
taxon_statistics[[15]]
taxon_statistics[[1]]
str(taxon_statistics[[15]])
str(taxon_statistics[[1]])
is.recursive(taxon_statistics[[1]])
is.recursive(taxon_statistics[[1]][[1]])
is.recursive(taxon_statistics[[15]][[15]])
is.recursive(taxon_statistics[[15]][[1]])
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = .1,
threshold_resolution = .1)
taxon_statistics
do.call(data.frame, taxon_statistics)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = .1,
threshold_resolution = .1)
do.call(data.frame, taxon_statistics)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = .1,
threshold_resolution = .1)
View(taxon_statistics)
taxon_statistics$distance_distribution
taxon_statistics$distance_distribution[1]
taxon_statistics[1,]
x <- fapply(1:2, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
str(x)
str(taxon_statistics)
View(taxon_statistics)
str(x)
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = .1,
threshold_resolution = .1)
str(taxon_statistics)
str(taxonomy_data)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = .1,
threshold_resolution = .1)
View(taxon_statistics)
str(taxonomy_data)
str(taxon_statistics)
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=F,
distance_bin_width = .1,
threshold_resolution = .1)
str(taxon_statistics)
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = .1,
threshold_resolution = .1)
source("functions.R")
taxon_statistics <- fapply(taxonomy_data[10:11,], functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=T,
distance_bin_width = .1,
threshold_resolution = .1)
str(taxon_statistics)
x <- fapply(1:10, c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
str(x)
x <- fapply(as.list(1:10), c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x
str(x)
taxon_statistics <- fapply(taxonomy_data, functions_to_apply,
preprocessor = get_stat_function_args,
preprocessor_args = list(level = level_to_analyze,
max_subset = max_sequences_to_compare),
allow_complex=TRUE,
distance_bin_width = distance_bin_width,
threshold_resolution = threshold_resolution)
View(taxon_statistics)
str(taxon_statistics)
melt(x)
head(melt(x))
head(melt(x, id=0))
ggplot(melt(x, id=0), aes(x=0, y=value, color=variable)) + geom_line()
ggplot(melt(x, id=0), aes() y=value, color=variable)) + geom_line()
ggplot(melt(x, id=0), aes(y=value, color=variable)) + geom_line()
z <- melt(x, id=0)
ggplot(z, aes(x=row.names(z), y=value, color=variable)) + geom_line()
z
row.names(z)
x <- name_rows(x)
x
z <- melt(x)
z
ggplot(z, aes(x=.rownames, y=value, color=variable)) + geom_line()
x
x <- name_rows(x)
x
ggplot(melt(x), aes(x=row.names(z), y=value, color=variable)) + geom_line()
x
x$count = 1:10
ggplot(melt(x), aes(x=count, y=value, color=variable)) + geom_line()
melt(x, id=count)
melt(x, id="count")
ggplot(melt(x, id="cont"), aes(x=count, y=value, color=variable)) + geom_line()
ggplot(melt(x, id="count"), aes(x=count, y=value, color=variable)) + geom_line()
x <- fapply(as.list(1:1000), c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
ggplot(melt(x, id="count"), aes(x=count, y=value, color=variable)) + geom_line()
x$count = 1:1000
ggplot(melt(x, id="count"), aes(x=count, y=value, color=variable)) + geom_line()
x <- fapply(as.list(1:10000), c("mean", "sd", "median", "max", "min"), preprocessor=rnorm)
x$count = 1:10000
ggplot(melt(x, id="count"), aes(x=count, y=value, color=variable)) + geom_line()
