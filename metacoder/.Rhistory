theme(title=element_text(size=20),
axis.text=element_text(size=12),
axis.title=element_text(size=16),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 18))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.3, fill="transparent") +
geom_violin(alpha=.5, aes_string(fill=level_column), colour = "transparent") +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Error rate distribution at optimal threshold ", y="Error rate", x="Taxonomic level") +
theme(title=element_text(size=20),
axis.text=element_text(size=12),
axis.title=element_text(size=16),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 18))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.3, fill="transparent") +
geom_violin(alpha=.5, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Error rate distribution at optimal threshold ", y="Error rate", x="Taxonomic level") +
theme(title=element_text(size=20),
axis.text=element_text(size=12),
axis.title=element_text(size=16),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 18))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.3, outlier.colour="transparent") +
geom_violin(alpha=.5, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Error rate distribution at optimal threshold ", y="Error rate", x="Taxonomic level") +
theme(title=element_text(size=20),
axis.text=element_text(size=12),
axis.title=element_text(size=16),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 18))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.3, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Error rate distribution at optimal threshold ", y="Error rate", x="Taxonomic level") +
theme(title=element_text(size=20),
axis.text=element_text(size=12),
axis.title=element_text(size=16),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 18))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Error rate distribution at optimal threshold ", y="Error rate", x="Taxonomic level") +
theme(title=element_text(size=20),
axis.text=element_text(size=12),
axis.title=element_text(size=16),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 18))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Clustering level", y="Error rate", x="Taxono level") +
theme(title=element_text(size=20),
axis.text=element_text(size=12),
axis.title=element_text(size=20),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 16))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Clustering level", y="Error rate", x="Taxon level") +
theme(title=element_text(size=20),
axis.text.y=element_text(size=12),
axis.text.x=element_text(size=12, angle = 60, hjust = 1)
axis.title=element_text(size=20),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 14))
}
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Clustering level", y="Error rate", x="Taxon level") +
theme(title=element_text(size=20),
axis.text.y=element_text(size=12),
axis.text.x=element_text(size=12, angle = 60, hjust = 1),
axis.title=element_text(size=20),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 14))
}
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Clustering level", y="Error rate", x="Taxon level") +
theme(title=element_text(size=20),
axis.text.y=element_text(size=12),
axis.text.x=element_text(size=12, angle = 60, hjust = 1)
axis.title=element_text(size=20),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 14))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Clustering level", y="Error rate", x="Taxon level") +
theme(title=element_text(size=19),
axis.text.y=element_text(size=12),
axis.text.x=element_text(size=12, angle = 60, hjust = 1),
axis.title=element_text(size=20),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 12))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Clustering level", y="Error rate", x="Taxon level") +
theme(title=element_text(size=12),
axis.text.y=element_text(size=12),
axis.text.x=element_text(size=12, angle = 60, hjust = 1),
axis.title=element_text(size=20),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 12))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Clustering level", y="Error rate", x="Taxon level") +
theme(title=element_text(size=16),
axis.text.y=element_text(size=12),
axis.text.x=element_text(size=12, angle = 60, hjust = 1),
axis.title=element_text(size=20),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 12))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Clustering level", y="Error rate", x="Taxon level") +
theme(title=element_text(size=18),
axis.text.y=element_text(size=12),
axis.text.x=element_text(size=12, angle = 60, hjust = 1),
axis.title=element_text(size=20),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 12))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level") {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(title="Clustering level", y="Error rate", x="Taxon level") +
theme(title=element_text(size=17),
axis.text.y=element_text(size=12),
axis.text.x=element_text(size=12, angle = 60, hjust = 1),
axis.title=element_text(size=20),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 12))
}
plot_value_distribution_by_level(taxon_data, "optimal_error")
plot_value_distribution_by_level(taxon_data, "optimal_threshold")
plot_value_distribution_by_level(taxon_data, "optimal_threshold", title="Clustering level", y="Optimal clustering threshold", x="Taxon level")
plot_value_distribution_by_level <- function(taxon_data, value_column, level_column = "level", ...) {
ggplot(taxon_data, aes_string(x=level_column, y=value_column)) +
geom_boxplot(width=.5, outlier.colour="transparent") +
geom_violin(alpha=.4, aes_string(fill=level_column,  colour = level_column)) +
geom_point(position = position_jitter(w = 0.1, h = 0), alpha = .2) +
facet_grid(~ clustering_level, scales = "free_x", space="free_x")  +
labs(...) +
theme(title=element_text(size=17),
axis.text.y=element_text(size=12),
axis.text.x=element_text(size=12, angle = 60, hjust = 1),
axis.title=element_text(size=20),
legend.position="none",
panel.background=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank(),
strip.text.x = element_text(size = 12))
}
plot_value_distribution_by_level(taxon_data, "optimal_threshold", title="Clustering level", y="Optimal clustering threshold", x="Taxon level")
taxonomy_graph <- graph.edgelist(taxon_edge_list(row.names(taxonomy_data)[2:nrow(taxonomy_data)], taxonomy_separator))
taxon\_graph <- graph.edgelist(taxon_edge_list(row.names(taxon_data)[2:nrow(taxon_data)], taxon_separator))
taxon_graph <- graph.edgelist(taxon_edge_list(row.names(taxon_data)[2:nrow(taxon_data)], taxon_separator))
source("constants.R")
taxon_graph <- graph.edgelist(taxon_edge_list(row.names(taxon_data)[2:nrow(taxon_data)], taxon_separator))
taxon_graph <- graph.edgelist(taxon_edge_list(row.names(taxon_data)[2:nrow(taxon_data)], taxonomy_separator))
row.names(taxon_data)
taxon_graph <- graph.edgelist(taxon_edge_list(taxon_data$taxon[2:nrow(taxon_data)], taxonomy_separator))
taxon_data$taxon[2:nrow(taxon_data)]
taxon_graph <- graph.edgelist(taxon_edge_list(taxon_data$taxon[2:nrow(taxon_data)], taxonomy_separator))
head(taxon_edge_list(taxon_data$taxon[2:nrow(taxon_data)], taxonomy_separator))
source("functions.R")
taxon_graph <- graph.edgelist(taxon_edge_list(taxon_data$taxon[2:nrow(taxon_data)], taxonomy_separator))
source("functions.R")
taxon_graph <- graph.edgelist(taxon_edge_list(taxon_data$taxon[2:nrow(taxon_data)], taxonomy_separator))
source("functions.R")
taxon_graph <- graph.edgelist(taxon_edge_list(taxon_data$taxon[2:nrow(taxon_data)], taxonomy_separator))
str(taxon_graph )
str(taxon_graph, max.level=1)
str(taxon_graph, max.level=0)
class(taxon_graph)
x = list(asd)
x = list(as=2)
class(x)
plot_value_tree(taxon_data$taxon, taxon_data$optimal_threshold,
scaling= taxonomy_data$subsampled_count,
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA')
source("functions.R")
plot_value_tree(taxon_data$taxon, taxon_data$optimal_threshold,
scaling= taxonomy_data$subsampled_count,
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA')
head(taxon_data$taxon)
class(taxon_data$taxon)
source("functions.R")
plot_value_tree(taxon_data$taxon, taxon_data$optimal_threshold,
scaling= taxonomy_data$subsampled_count,
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA')
plot_value_tree(taxon_data$taxon, taxon_data$optimal_threshold,
scaling= taxon_data$subsampled_count,
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA')
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA')
source("functions.R")
save="test.png")
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="test.png")
setwd("~/Repositories/Scripts/metacoder")
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="test.png")
dev.off()
source('plotting_functions.R')
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="test.png")
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="/home/local/USDA-ARS/fosterz/Repositories/Reports/presentations/metacoder/test.png")
source('plotting_functions.R')
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="/home/local/USDA-ARS/fosterz/Repositories/Reports/presentations/metacoder/test.png")
source('plotting_functions.R')
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="/home/local/USDA-ARS/fosterz/Repositories/Reports/presentations/metacoder/test.png")
source('plotting_functions.R')
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="/home/local/USDA-ARS/fosterz/Repositories/Reports/presentations/metacoder/test.png")
source('plotting_functions.R')
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="/home/local/USDA-ARS/fosterz/Repositories/Reports/presentations/metacoder/test.png")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
source('plotting_functions.R')
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="/home/local/USDA-ARS/fosterz/Repositories/Reports/presentations/metacoder/test.png")
dev.off()
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="/home/local/USDA-ARS/fosterz/Repositories/Reports/presentations/metacoder/test.png")
dev.off()
source('plotting_functions.R')
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="/home/local/USDA-ARS/fosterz/Repositories/Reports/presentations/metacoder/test.png")
source('plotting_functions.R')
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="/home/local/USDA-ARS/fosterz/Repositories/Reports/presentations/metacoder/test.png")
source('plotting_functions.R')
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level=="Genus"], taxon_data$optimal_threshold[taxon_data$clustering_level=="Genus"],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level=="Genus"],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save="/home/local/USDA-ARS/fosterz/Repositories/Reports/presentations/metacoder/test.png")
levels(clustering_level)
levels(taxon_data$clustering_level)
unique(taxon_data$clustering_level)
for (my_level in unique(taxon_data$clustering_level)) {
output_name <- paste("threshold_value_tree_", as.character(my_level), '.png', sep='')
output_path <- file.path(taxon_data_folder, output_name)
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level==my_level],
taxon_data$optimal_threshold[taxon_data$clustering_level==my_level],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level==my_level],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save=output_path)
}
for (my_level in unique(taxon_data$clustering_level)) {
output_name <- paste("threshold_value_tree_", as.character(my_level), '.png', sep='')
output_path <- file.path(taxon_data_folder, output_name)
print(output_name)
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level==my_level],
taxon_data$optimal_threshold[taxon_data$clustering_level==my_level],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level==my_level],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save=output_path)
}
for (my_level in unique(taxon_data$clustering_level)) {
if (length(taxon_data$taxon[taxon_data$clustering_level==my_level] > 1)) {
output_name <- paste("threshold_value_tree_", as.character(my_level), '.png', sep='')
output_path <- file.path(taxon_data_folder, output_name)
print(output_name)
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level==my_level],
taxon_data$optimal_threshold[taxon_data$clustering_level==my_level],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level==my_level],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save=output_path)
}
}
unique(taxon_data$clustering_level)
View(taxon_data)
for (my_level in unique(taxon_data$clustering_level)) {
if (length(taxon_data$taxon[taxon_data$clustering_level==my_level]) > 1) {
output_name <- paste("threshold_value_tree_", as.character(my_level), '.png', sep='')
output_path <- file.path(taxon_data_folder, output_name)
print(output_name)
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level==my_level],
taxon_data$optimal_threshold[taxon_data$clustering_level==my_level],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level==my_level],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save=output_path)
}
}
for (my_level in unique(taxon_data$clustering_level)) {
if (length(taxon_data$taxon[taxon_data$clustering_level==my_level]) > 1) {
output_name <- paste("error_value_tree_", as.character(my_level), '.png', sep='')
output_path <- file.path(taxon_data_folder, output_name)
print(output_name)
plot_value_tree(taxon_data$taxon[taxon_data$clustering_level==my_level],
taxon_data$optimal_error[taxon_data$clustering_level==my_level],
scaling= taxon_data$subsampled_count[taxon_data$clustering_level==my_level],
value_range=c(0.03, 0.97),
labels=TRUE,
label_color='#AAAAAA',
save=output_path)
}
}
